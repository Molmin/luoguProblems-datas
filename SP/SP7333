===== Sample #1 Input =====
\n\n11\n1 0 1 0 1\n20 0 26 1 3
10 11 21 0 0
64 0 0 1 23
48 0 0 0 0
42 18 29 6 13
29 19 25 0 0
32 0 0 8 27
75 0 1 0 1
75 0 1 0 0
75 0 0 0 1
===== Sample #1 Output =====
\n
Case 1: 1.3333333\nCase 2: 3.1143655
Case 3: 1.0000000
Case 4: 39.6303478
Case 5: IMPOSSIBLE
Case 6: 7.1950023
Case 7: 4.7682679
Case 8: 8.1514607
Case 9: 660.4533446
Case 10: 1320.4066892
Case 11: 1320.4066892\n\nHint\n\nCalculate  P [n] [ rest ] [q] [next].  It is in this session, we have not heard the song in each n songs played,\nwith "rest" number of songs never heard,  with q minutes played so far, \n the probability of "next" song been played for the first time.  Dp by this O (N ^ 2q ^ 2).\nSum over [0, q] to get  P [n] [rest] [qsum] [next], so we can use subtraction to get interval sums.\n\nNow let 0 be day, 1 by night, then we compute dp[0][rest], dp[1] [rest], the expected number of days it takes to\nfinish all the songs if only considering day or night. dp [0] [rest] is [0, rest) of dp [1] [rest] and P [n] [rest] [qsum] [next].\nUsing O ( rest ) can be calculated as as X = dp[0][rest], Y = dp[1] [rest], then {X = a Y + c, Y = b X + d}.\nSolving this, and done.\nIn the base case with rest=1, use infinite geometric series to compute overall O (TN ^ 2 + N ^ 2q ^ 2).\n\n
